// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "Tilemap 1":
            case "level3":return tiles.createTilemap(hex`1e001100010101010101010101010101010101010101010101010101010101010101010806060606060606060606060606060606060606060606060606060c0101030707070707070707070707070707070707070707070707070907050101030707070707070707070707070707070707070707090707090907050101030707070d070707070707070909070709090707090907070707070501010307070d070707070d0907070707070707070707090707070707070e010103070707070707070707070d0707090907070907070909070707070501010307070d07070d090707070d07070707070707070d070707070e070501010307070707070707070d090709090d070707090707070d09070707050101030707070d07070707070d070707090d07090d070907090e070707050101030707070d07070709090707070d0d0d07070d0d070e09070707070501010307070707070d070907070d0707070707070d0e070707070707070501010307070707070907070707070e070d0707070e07070707070707070501010307070707070e07070e0707070707070e070707070707070707070501010a040e0404040404040404040404040404040404040404040404040b01010101010202020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101`, img`
222222222222222222222222222222
2............................2
2............................2
2............................2
2............................2
2...........................22
2............................2
2.........................2..2
2............................2
2.......................2....2
2.....................2......2
2...................2........2
2............2.....2.........2
2......2..2......2...........2
2..2.........................2
2222.........................2
222222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.hazardLava1,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundNorthEast1,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.floorDark2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
